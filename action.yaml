name: 'GoLangCI Lint Action'
description: 'A GitHub Action to run GoLangCI-Lint on pull requests'

inputs:
  go_version:
    description: 'The Go version to use'
    required: true
    default: '1.23'
  github_token:
    description: 'GitHub token for API interactions'
    required: true
  reviewdog_level:
    description: 'Level of reviewdog output'
    required: true
    default: 'error'
  fail_level:
    description: 'Fail level for reviewdog'
    required: true
    default: 'any'
  reporter:
    description: 'Reviewdog reporter type'
    required: true
    default: 'github-pr-review'
  filter_mode:
    description: 'Reviewdog filter mode'
    required: true
    default: 'diff_context'
  golangci_lint_version:
    description: 'GolangCI-Lint version to use'
    required: true
    default: 'v1.64.8'

runs:
  using: 'composite'
  steps:
    - name: Create GitHub App Token
      if: github.event.pull_request.head.repo.fork == false
      uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_APP_ID }}
        private-key: ${{ secrets.LERIAN_STUDIO_MIDAZ_PUSH_BOT_PRIVATE_KEY }}

    - name: Import GPG Key
      if: github.event.pull_request.head.repo.fork == false
      uses: crazy-max/ghaction-import-gpg@v6
      id: import_gpg
      with:
        gpg_private_key: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY }}
        passphrase: ${{ secrets.LERIAN_CI_CD_USER_GPG_KEY_PASSWORD }}
        git_committer_name: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
        git_committer_email: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
        git_config_global: true
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Run GoLangCI-Lint for Non-Fork Repos
      if: github.event.pull_request.head.repo.fork == false
      uses: reviewdog/action-golangci-lint@v2
      with:
        github_token: ${{ inputs.github_token }}
        go_version: ${{ inputs.go_version }}
        tool_name: golint
        level: ${{ inputs.reviewdog_level }}
        fail_level: ${{ inputs.fail_level }}
        reporter: ${{ inputs.reporter }}
        filter_mode: ${{ inputs.filter_mode }}
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ inputs.github_token }}
        GITHUB_TOKEN: ${{ inputs.github_token }}
        GIT_AUTHOR_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
        GIT_AUTHOR_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}
        GIT_COMMITTER_NAME: ${{ secrets.LERIAN_CI_CD_USER_NAME }}
        GIT_COMMITTER_EMAIL: ${{ secrets.LERIAN_CI_CD_USER_EMAIL }}

    - name: Setup Go for Forked Repo
      if: github.event.pull_request.head.repo.fork == true
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: false

    - name: Run GoLangCI-Lint for Forked Repos
      if: github.event.pull_request.head.repo.fork == true
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
